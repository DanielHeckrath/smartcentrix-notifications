// Code generated by protoc-gen-go.
// source: notification/notifications.proto
// DO NOT EDIT!

/*
Package notification is a generated protocol buffer package.

It is generated from these files:
	notification/notifications.proto

It has these top-level messages:
	Notification
	SendNotificationRequest
	SendNotificationResponse
*/
package notification

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Notification struct {
	Title *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Body  *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	Icon  string                       `protobuf:"bytes,3,opt,name=icon" json:"icon,omitempty"`
	Sound *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=sound" json:"sound,omitempty"`
	Badge *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=badge" json:"badge,omitempty"`
}

func (m *Notification) Reset()                    { *m = Notification{} }
func (m *Notification) String() string            { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()               {}
func (*Notification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Notification) GetTitle() *google_protobuf.StringValue {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *Notification) GetBody() *google_protobuf.StringValue {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Notification) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Notification) GetSound() *google_protobuf.StringValue {
	if m != nil {
		return m.Sound
	}
	return nil
}

func (m *Notification) GetBadge() *google_protobuf.StringValue {
	if m != nil {
		return m.Badge
	}
	return nil
}

type SendNotificationRequest struct {
	Notification *Notification `protobuf:"bytes,1,opt,name=notification" json:"notification,omitempty"`
	PushTokens   []string      `protobuf:"bytes,2,rep,name=push_tokens,json=pushTokens" json:"push_tokens,omitempty"`
}

func (m *SendNotificationRequest) Reset()                    { *m = SendNotificationRequest{} }
func (m *SendNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*SendNotificationRequest) ProtoMessage()               {}
func (*SendNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SendNotificationRequest) GetNotification() *Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

func (m *SendNotificationRequest) GetPushTokens() []string {
	if m != nil {
		return m.PushTokens
	}
	return nil
}

type SendNotificationResponse struct {
}

func (m *SendNotificationResponse) Reset()                    { *m = SendNotificationResponse{} }
func (m *SendNotificationResponse) String() string            { return proto.CompactTextString(m) }
func (*SendNotificationResponse) ProtoMessage()               {}
func (*SendNotificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Notification)(nil), "notification.Notification")
	proto.RegisterType((*SendNotificationRequest)(nil), "notification.SendNotificationRequest")
	proto.RegisterType((*SendNotificationResponse)(nil), "notification.SendNotificationResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NotificationService service

type NotificationServiceClient interface {
	// LoginUser tries to validate a username and password combination
	//
	// The method returns the existing user and an access token for future requests
	SendNotification(ctx context.Context, in *SendNotificationRequest, opts ...grpc.CallOption) (*SendNotificationResponse, error)
}

type notificationServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotificationServiceClient(cc *grpc.ClientConn) NotificationServiceClient {
	return &notificationServiceClient{cc}
}

func (c *notificationServiceClient) SendNotification(ctx context.Context, in *SendNotificationRequest, opts ...grpc.CallOption) (*SendNotificationResponse, error) {
	out := new(SendNotificationResponse)
	err := grpc.Invoke(ctx, "/notification.NotificationService/SendNotification", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NotificationService service

type NotificationServiceServer interface {
	// LoginUser tries to validate a username and password combination
	//
	// The method returns the existing user and an access token for future requests
	SendNotification(context.Context, *SendNotificationRequest) (*SendNotificationResponse, error)
}

func RegisterNotificationServiceServer(s *grpc.Server, srv NotificationServiceServer) {
	s.RegisterService(&_NotificationService_serviceDesc, srv)
}

func _NotificationService_SendNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).SendNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notification.NotificationService/SendNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).SendNotification(ctx, req.(*SendNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "notification.NotificationService",
	HandlerType: (*NotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendNotification",
			Handler:    _NotificationService_SendNotification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notification/notifications.proto",
}

func init() { proto.RegisterFile("notification/notifications.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x90, 0xcd, 0x4a, 0xfc, 0x30,
	0x14, 0xc5, 0xe9, 0x7c, 0xfc, 0x61, 0xee, 0xcc, 0xe2, 0x4f, 0x5c, 0x18, 0x8a, 0x68, 0x29, 0x28,
	0x5d, 0xa5, 0x52, 0xf7, 0x3e, 0x82, 0x8b, 0x56, 0xdc, 0x4a, 0x3f, 0xee, 0xd4, 0x60, 0xc9, 0xad,
	0x4d, 0xea, 0xd7, 0x53, 0xfb, 0x08, 0xd2, 0x74, 0x84, 0x54, 0x11, 0xbb, 0x4b, 0x4e, 0x7e, 0xe7,
	0x9e, 0xdc, 0x03, 0x81, 0x22, 0x23, 0xf7, 0xb2, 0xcc, 0x8d, 0x24, 0x15, 0xbb, 0x17, 0x2d, 0xda,
	0x8e, 0x0c, 0xb1, 0x9d, 0x2b, 0xfa, 0xa7, 0x35, 0x51, 0xdd, 0x60, 0x6c, 0xdf, 0x8a, 0x7e, 0x1f,
	0xbf, 0x74, 0x79, 0xdb, 0x62, 0x77, 0xa0, 0xc3, 0x0f, 0x0f, 0x76, 0x37, 0x8e, 0x81, 0x25, 0xb0,
	0x36, 0xd2, 0x34, 0xc8, 0xbd, 0xc0, 0x8b, 0xb6, 0xc9, 0x89, 0x18, 0x07, 0x88, 0xaf, 0x01, 0x22,
	0x33, 0x9d, 0x54, 0xf5, 0x5d, 0xde, 0xf4, 0x98, 0x8e, 0x28, 0xbb, 0x84, 0x55, 0x41, 0xd5, 0x1b,
	0x5f, 0xcc, 0xb0, 0x58, 0x92, 0x31, 0x58, 0xc9, 0x92, 0x14, 0x5f, 0x06, 0x5e, 0xb4, 0x49, 0xed,
	0x79, 0x48, 0xd6, 0xd4, 0xab, 0x8a, 0xaf, 0xe6, 0x24, 0x5b, 0x74, 0xf0, 0x14, 0x79, 0x55, 0x23,
	0x5f, 0xcf, 0xf1, 0x58, 0x34, 0x7c, 0x87, 0xe3, 0x0c, 0x55, 0xe5, 0x6e, 0x9d, 0xe2, 0x53, 0x8f,
	0xda, 0xb0, 0x6b, 0x98, 0xb4, 0x77, 0xe8, 0xc0, 0x17, 0xae, 0x28, 0x26, 0xc6, 0x09, 0xcf, 0xce,
	0x60, 0xdb, 0xf6, 0xfa, 0xe1, 0xde, 0xd0, 0x23, 0x2a, 0xcd, 0x17, 0xc1, 0x32, 0xda, 0xa4, 0x30,
	0x48, 0xb7, 0x56, 0x09, 0x7d, 0xe0, 0x3f, 0xb3, 0x75, 0x4b, 0x4a, 0x63, 0xf2, 0x0a, 0x47, 0xae,
	0x9e, 0x61, 0xf7, 0x2c, 0x4b, 0x64, 0x39, 0xfc, 0xff, 0x6e, 0x61, 0xe7, 0xd3, 0x1f, 0xfd, 0xb2,
	0x8e, 0x7f, 0xf1, 0x17, 0x36, 0x26, 0x17, 0xff, 0x6c, 0x5d, 0x57, 0x9f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x7f, 0x05, 0xda, 0xde, 0x5d, 0x02, 0x00, 0x00,
}
